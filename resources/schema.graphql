# DIRECTIVES

enum Role {CREATE READ UPDATE DELETE}

directive @permissions (
    roles: [Role!]!
)
on FIELD_DEFINITION | SCHEMA | OBJECT | MUTATION

# SCALARS

scalar Date

# INTERFACES

interface Node {
    id: ID!
}

# OBJECTS

type Thing implements Node {
    id: ID!
    name: String!
    otherThings: [OtherThing!]
}

type OtherThing implements Node {
    id: ID!
    name: String!
    thing: [Thing!]
}

# INPUT TYPES

input ThingInput {
    id: ID!
    name: String!
}

# MUTATION

type Mutation {
    create_thing (thing: ThingInput): Thing @permissions(roles:[])
}

type Query {
    thing(id: ID!): Thing
    things: [Thing!]
}

type Updated {
    message: String
}

type Subscription {
    updated: Updated
}

schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}
